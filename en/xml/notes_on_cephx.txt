1. Enhance SaltStack procedure with the points below:
-----------------------------------------------------
* salt-key --accept-all:
  minions all have a key - salt masters have a key - both items do symetric key
  based comunication - the master must accept the minion into its control - so
  it says that minion is mine - minions with other keys  are not acepted by the
  master - as we want it 100% clear that the keys for salt are nto the keys for
  ceph 
* salt keys:
  with salt you have the keys in your git repo where you stroe them in your
  sls file
* explain '*' meaning all minions
* salt '*' state.sls cluster_buildup:
  applies the file  cluster_buildup to the cluster on each node - think of
  'cluster_buildup' as a program in salt language
* state.sls:
  salt command to apply salt language
* salt '*' ceph.keyring_create keyring_type=admin:
  thsi will run the module directly ratehr than calling it in a sls file - you
  then use the output of a secret to replace the secret in the sls file -
  admin is the key you as an admin uses to admin the server - this key allows
  full control of ceph - typically you might install this only on the mon
  nodes - the mon keyring is only wanted / needed on the mon nodes - the mon
  keyring can be used to generate an admin keyring - the keyrings osd, rgw and
  mds are not like other keyrings, these have profiles - so you need them to
  create keyrings for osd's mds and rgw - these service's prepare the keyring
  for the service using the bootstrap keyrings  osd, rgw and mds - 
   you can list the keyrins on a runnign cluster with ceph auth list

* look at a ceph-deploy cluietr
eg
client.bootstrap-mds
        key: AQA7OP5WSqzuMBAAEMrLhs+gdp8+cfJMn0sO9w==
        caps: [mon] allow profile bootstrap-mds
client.bootstrap-osd
        key: AQA7OP5WV9+jFRAAKxUe+ZKH5dIjlj1dMu97NA==
        caps: [mon] allow profile bootstrap-osd
client.bootstrap-rgw
        key: AQA7OP5W2ppgIRAAmGFCaFIiJWCGF8wFsDrebw==
        caps: [mon] allow profile bootstrap-rgw


2. Add simple .sls file example and explain it
----------------------------------------------
* /usr/share/doc/packages/salt-ceph/examples/cluster_buildup.sls:
  each type Osd, mon, rgw) may ahve its own sls section/file

3. Add 'Key Management' section into cephx chapter based on
  http://docs.ceph.com/docs/master/rados/operations/user-management/

4. Include https://gitlab.suse.de/ceph/documentation/blob/master/ceph-by-hand-install.txt
after the cpehx architecture section with detailed explanation
