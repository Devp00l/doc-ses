<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="ceph.iscsi.cha.ceph.iscsi">
<!-- ============================================================== -->
<!-- initially imported from https://github.com/SUSE/lrbd/wiki -->
 <title>&ceph; iSCSI Gateway</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer>tbazant@suse.com</dm:maintainer>
   <dm:status>editing</dm:status>
   <dm:deadline></dm:deadline>
   <dm:priority></dm:priority>
   <dm:translation></dm:translation>
   <dm:languages></dm:languages>
   <dm:release>SES2.1</dm:release>
  </dm:docmanager>
 </info>
 <para>
  *** add intro here ***
 </para>
 <sect1 xml:id="ceph.iscsi.prerequisites">
  <title>Prerequisites</title>

  <literallayout>You must have the following:
* a working Ceph cluster * a host to act as a gateway (iSCSI target)
* a host to act as a client (iSCSI initiator) * lrbd installed on the gateway</literallayout>

  <para>
   For <emphasis role="strong">Adding a Gateway</emphasis> and
   <emphasis role="strong">Adding a Target</emphasis> * another host to act
   as a second or redundant gateway
  </para>
 </sect1>
 <sect1 xml:id="ceph.iscsi.building-a-configuration">
  <title>Building a configuration</title>

  <para>
   The lrbd configuration is a global configuration for all gateways and
   clients. The gateway sections include the Ceph pools, RBD images, portals
   (i.e. network interfaces), static targets and authentication. Within
   these sections are specific access definitions and restrictions for
   initiators.
  </para>

  <para>
   Imagine the physical layout below with a single client acting as an
   initiator connecting via a gateway to a Ceph cluster.
  </para>

  <figure>
   <title>Physical Layout</title>
   <mediaobject>
    <imageobject>
     <imagedata fileref="iscsi-physical.png" />
    </imageobject>
    <textobject><phrase>Physical Layout</phrase>
    </textobject>
   </mediaobject>
  </figure>

  <para>
   For a first configuration, find the <emphasis>simple.json</emphasis> file
   located in /usr/share/doc/packages/lrbd/samples. Copy this file to
   another location such as your home directory. The file contains four
   sections which are targets, auth, portals and pools. The purpose of the
   separate sections is to accommodate the myriad of configurations that
   iSCSI can support.
  </para>

  <para>
   For your convenience, the contents of <emphasis>simple.json</emphasis>
   are displayed below.
  </para>

<programlisting>
{
    "targets": [
      {
        "host": "igw1",
        "target": "iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk"
      }
    ],
    "auth": [
        {
            "host": "igw1",
            "authentication": "tpg",
            "tpg": {
                "userid": "common1",
                "password": "pass1"
            }
        }
    ],
    "portals": [
        {
            "name": "portal1",
            "addresses": [ "172.16.1.16" ]
        }
    ],
    "pools": [
        {
            "pool": "rbd",
            "gateways": [
                {
                    "host": "igw1",
                    "tpg": [
                        {
                            "portal": "portal1",
                            "image": "archive"
                        }
                    ]
                }
            ]
        }
    ]
}
</programlisting>

  <para>
   An experienced storage administrator may ask "Where's the Lun?".
   Essentially, the mapped RBD image is the LUN. Lrbd uses the Ceph
   terminology of pool and image, but uses the iSCSI terms target, initiator
   and portal. The following diagram shows the relationship.
  </para>

  <figure>
   <title>Abstract Layout</title>
   <mediaobject>
    <imageobject>
     <imagedata fileref="iscsi-abstract.png" />
    </imageobject>
    <textobject><phrase>Abstract Layout</phrase>
    </textobject>
   </mediaobject>
  </figure>

  <para>
   Note that this configuration is one portal within one target on one
   gateway accessing one image within one pool. Before exploring more
   complex configurations, follow these instructions for customizing and
   applying the configuration.
  </para>

  <sect2 xml:id="ceph.iscsi.pools">
   <title>Pools</title>
   <literallayout>If you wish to use the default pool and RBD image, verify the following:
* the rbd pool exists
<literal># rados lspools</literal> * the archive image exists
<literal># rbd -p rbd ls</literal>
   </literallayout>
   <para>
    Otherwise, create your own pool and RBD image. Update the pool and image
    in the pools section.
   </para>
   <para>
    Update the <emphasis>host</emphasis> to match the hostname of the
    gateway.
   </para>
<programlisting language="php">
"pools": [  
    {  
        "pool": "rbd",  
        "gateways": [  
            {  
                "host": igw1,   
                "tpg": [  
                    {  
                        "portal": "portal1",  
                        "image": "archive"
                    }  
                ]  
            }   
        ]   
    }  
]  
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.targets">
   <title>Targets</title>
   <para>
    Under the targets section, update the host to match the hostname of the
    gateway. Replace the target with the output of
    <emphasis role="strong">iscsi-name</emphasis>.
   </para>
<programlisting language="php">
"targets": [
  {
    "host": igw1,
    "target": iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk,
  }
]
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.portals">
   <title>Portals</title>
   <para>
    Replace the address with a valid network address of the gateway host.
   </para>
<programlisting language="php">
"portals": [
    {
        "name": "portal1",
        "addresses": [ 172.16.1.16 ]
    }
]
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.auth">
   <title>Auth</title>
   <para>
    The authentication is set to
    <emphasis role="strong">tpg+identified</emphasis>. All initiators will
    use the same credentials to connect to this target. Replace the
    <emphasis>host</emphasis> with the hostname of the gateway. Set the
    desired <emphasis>userid</emphasis> and <emphasis>password</emphasis>
    for CHAP authentication.
   </para>
<programlisting language="php">
"auth": [
    {
        "host": igw1,
        "authentication": "tpg+identified", 
        "tpg": {
            "userid": common1, 
            "password": pass1
        }
    } 
]
</programlisting>
   <para>
    Add comments if you wish using a '#'. Any comments will be stripped when
    importing the configuration.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="ceph.iscsi.applying-the-configuration">
  <title>Applying the configuration</title>

  <literallayout>Import the configuration and then query the configuration from a gateway host.
<literal># lrbd -f ~/simple.json</literal><literal># lrbd -o</literal>
  </literallayout>

  <para>
   The output will be similar to the following:
  </para>

<programlisting>
{
    "auth": [
        {
            "host": "igw1", 
            "authentication": "tpg+identified", 
            "tpg": {
                "userid": "common1", 
                "password": "pass1"
            }
        }
    ], 
    "targets": [
        {
            "host": "igw1", 
            "target": "iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk"
        }
    ], 
    "portals": [
        {
            "name": "portal1", 
            "addresses": [
                "172.16.1.16"
            ]
        }
    ], 
    "pools": [
        {
            "pool": "rbd", 
            "gateways": [
                {
                    "host": "igw1", 
                    "tpg": [
                        {
                            "portal": "portal1", 
                            "image": "archive", 
                            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
                        }
                    ]
                }
            ]
        }
    ]
}
</programlisting>

  <para>
   Another option to display the configuration is
  </para>

  <para>
   <literal># lrbd -l</literal>
  </para>

  <para>
   In this case, both outputs will be the same. The
   <emphasis role="strong">-o</emphasis> displays all hosts while
   <emphasis role="strong">-l</emphasis> shows only entries relevant to this
   host. This is most useful when determining whether a configuration is
   correct for a gateway.
  </para>

  <literallayout>Inspect the current configuration.
<literal># targetcli ls</literal>
  </literallayout>

  <para>
   The output will show nothing configured.
  </para>

<programlisting language="bash">
Loaded vhost_scsi kernel module.
Created '/sys/kernel/config/target/vhost'.
Loaded iscsi_target_mod kernel module.
Created '/sys/kernel/config/target/iscsi'.
Loaded tcm_loop kernel module.
Created '/sys/kernel/config/target/loopback'.
Loaded tcm_fc kernel module.
Created '/sys/kernel/config/target/fc'.
Loaded ib_srpt kernel module.
Created '/sys/kernel/config/target/srpt'.
Loaded tcm_qla2xxx kernel module.
Created '/sys/kernel/config/target/qla2xxx'.
o- / ..................................................................... [...]
  o- backstores .......................................................... [...]
  | o- fileio ............................................... [0 Storage Object]
  | o- iblock ............................................... [0 Storage Object]
  | o- pscsi ................................................ [0 Storage Object]
  | o- rbd .................................................. [0 Storage Object]
  | o- rd_mcp ............................................... [0 Storage Object]
  o- ib_srpt ....................................................... [0 Targets]
  o- iscsi ......................................................... [0 Targets]
  o- loopback ...................................................... [0 Targets]
  o- qla2xxx ....................................................... [0 Targets]
  o- tcm_fc ........................................................ [0 Targets]
  o- vhost ......................................................... [0 Targets]
</programlisting>

  <para>
   Verify that the hostname matches the configuration. Note the
   <emphasis>defaults to</emphasis> value for the -H option below.
  </para>

  <para>
   <literal># lrbd -h</literal>
  </para>

<programlisting language="bash">
usage: lrbd [-h] [-e] [-E editor] [-c name] [--ceph ceph] [-H host] [-o] [-l]
            [-f file] [-a file] [-u] [-v] [-d] [-I] [-R] [-W] [-C]

optional arguments:
  -h, --help            show this help message and exit
  -e, --edit            edit the rbd configuration for iSCSI
  -E editor, --editor editor
                        use editor to edit the rbd configuration for iSCSI
  -c name, --config name
                        use name for object, defaults to "lrbd.conf"
  --ceph ceph           specify the ceph configuration file
  -H host, --host host  specify the hostname, defaults to "igw1"
  -o, --output          display the configuration
  -l, --local           display the host configuration                          
  -f file, --file file  import the configuration from file                      
  -a file, --add file   add the configuration from file                         
  -u, --unmap           unmap the rbd images                                    
  -v, --verbose         print INFO messages                                     
  -d, --debug           print DEBUG messages                                    
  -I, --iblock          set the backstore to iblock, defaults to rbd            
  -R, --rbd             set the backstore to rbd                                
  -W, --wipe            wipe the configuration objects from all pools           
  -C, --clear           clear the targetcli configuration    
</programlisting>

  <literallayout>Run the lrbd command to apply the saved configuration.
<literal># lrbd</literal>
  </literallayout>

  <literallayout>If the hostname in the configuration does not match the hostname in the help message, run the following command to apply the configuration instead.
<literal># lrbd -H configured_hostname</literal>
  </literallayout>

  <para>
   The lrbd command outputs each rbd and targetcli command with its output.
  </para>

<programlisting language="bash">
targetcli /backstores/rbd create name=archive dev=/dev/rbd/rbd/archive
Loaded vhost_scsi kernel module.
Created '/sys/kernel/config/target/vhost'.
Loaded iscsi_target_mod kernel module.
Created '/sys/kernel/config/target/iscsi'.
Loaded tcm_loop kernel module.
Created '/sys/kernel/config/target/loopback'.
Loaded tcm_fc kernel module.
Created '/sys/kernel/config/target/fc'.
Loaded ib_srpt kernel module.
Created '/sys/kernel/config/target/srpt'.
Loaded tcm_qla2xxx kernel module.
Created '/sys/kernel/config/target/qla2xxx'.
Created RBD storage object archive using /dev/rbd/rbd/archive.
targetcli /iscsi create iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk
Created target iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk.
Selected TPG Tag 1.
Created TPG 1.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk/tpg1/luns create /backstores/rbd/archive
Selected LUN 0.
Created LUN 0.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk/tpg1/portals create 172.16.1.16
Using default IP port 3260
Created network portal 172.16.1.16:3260.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk/tpg1/acls create iqn.1996-04.de.suse:01:e6ca28cc9f20
Created Node ACL for iqn.1996-04.de.suse:01:e6ca28cc9f20
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 create 0 0
Created Mapped LUN 0.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 set auth userid=common1 password=pass1
Parameter password is now 'pass1'.
Parameter userid is now 'common1'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk/tpg1 set attribute authentication=1 demo_mode_write_protect=0 generate_node_acls=0
Parameter authentication is now '1'.
Parameter demo_mode_write_protect is now '0'.
Parameter generate_node_acls is now '0'.
</programlisting>

  <literallayout>Inspect the current configuration again.
<literal># targetcli ls</literal>
  </literallayout>

  <para>
   The output will look similar to the following:
  </para>

<programlisting language="bash">
o- / ..................................................................... [...]
  o- backstores .......................................................... [...]
  | o- fileio ............................................... [0 Storage Object]
  | o- iblock ............................................... [0 Storage Object]
  | o- pscsi ................................................ [0 Storage Object]
  | o- rbd .................................................. [1 Storage Object]
  | | o- archive .............................. [/dev/rbd/rbd/archive activated]
  | o- rd_mcp ............................................... [0 Storage Object]
  o- ib_srpt ....................................................... [0 Targets]
  o- iscsi .......................................................... [1 Target]
  | o- iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk .......... [1 TPG]
  |   o- tpg1 ........................................................ [enabled]
  |     o- acls ........................................................ [1 ACL]
  |     | o- iqn.1996-04.de.suse:01:e6ca28cc9f20 ................ [1 Mapped LUN]
  |     |   o- mapped_lun0 ......................................... [lun0 (rw)]
  |     o- luns ........................................................ [1 LUN]
  |     | o- lun0 ......................... [rbd/archive (/dev/rbd/rbd/archive)]
  |     o- portals .................................................. [1 Portal]
  |       o- 172.16.1.16:3260 .............................. [OK, iser disabled]
  o- loopback ...................................................... [0 Targets]
  o- qla2xxx ....................................................... [0 Targets]
  o- tcm_fc ........................................................ [0 Targets]
  o- vhost ......................................................... [0 Targets]
</programlisting>

  <para>
   The import, editing or querying can be done on any Ceph client with lrbd
   installed. Applying the configuration will only make changes to the
   current host.
  </para>

  <para>
   Host specific configurations can be queried from another host. For
   example, running the following from host
   <emphasis role="strong">igw1</emphasis>
  </para>

  <para>
   <literal># lrbd -H igw2 -l</literal>
  </para>

  <para>
   will display the configuration of host
   <emphasis role="strong">igw2</emphasis>. Applying the configuration of
   another host is similar. From a host
   <emphasis role="strong">test1</emphasis>, running
  </para>

  <para>
   <literal># lrbd -H igw2</literal>
  </para>

  <para>
   applies the configuration from host
   <emphasis role="strong">igw2</emphasis>. This allows investigation from
   separate hardware or temporary replacement of failed hardware without
   modifying the configuration.
  </para>
 </sect1>
 <sect1 xml:id="ceph.iscsi.expanding-the-configuration">
  <title>Expanding the configuration</title>

  <para>
   Growing the configuration to match your requirements is straightforward.
   Add the necessary entries often by copying an existing entry and making
   simple changes. Be aware that a valid JSON structure needs a comma
   between elements but not after the last element in a list.
  </para>

  <para>
   The following examples reference the simple.json in the previous
   section.php
  </para>

  <sect2 xml:id="ceph.iscsi.adding-an-image">
   <title>Adding an image</title>
   <literallayout>Create an image within the same pool.
<literal># rbd -p rbd create data --size=2048</literal>
   </literallayout>
   <para>
    Copy the tpg entry containing image, portal and initiator. Change the
    image in the new entry, save your changes and apply. An initiator can
    access two RBD images from the same pool on the same gateway over the
    same network path.
   </para>
<programlisting language="php">
{
    "portal": "portal1",
    "image": "archive",
    "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
},
{
    "portal": "portal1",
    "image": data,
    "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
}
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.adding-an-initiator">
   <title>Adding an initiator</title>
   <para>
    Nearly identical to the adding an image, but change the initiator in the
    new entry. Two different initiators can access the same RBD image on the
    same gateway over the same network path.
   </para>
<programlisting language="php">
{
    "portal": "portal1",
    "image": "archive",
    "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
},
{
    "portal": "portal1",
    "image": "archive",
    "initiator": iqn.1991-05.com.microsoft:client.example.com
}
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.adding-a-portal">
   <title>Adding a portal</title>
   <para>
    In the portals section, duplicate the portal entry and change the name
    and address.
   </para>
<programlisting language="php">
{
    "name": "portal1",
    "addresses": [ "172.16.1.16" ]
},
{
    "name": portal2,
    "addresses": [ 172.16.2.16 ]
}
</programlisting>
   <para>
    Use the new portal name. In this example, each initiator will use a
    dedicated network interface.
   </para>
<programlisting language="php">
{
    "portal": "portal1",
    "image": "archive",
    "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
},
{
    "portal": portal2,
    "image": "archive",
    "initiator": "iqn.1991-05.com.microsoft:client.example.com"
}
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.adding-an-address">
   <title>Adding an address</title>
   <para>
    In the portals section, provide a second address to an existing portal.
    Any entry using this portal will provide redundancy across two network
    paths.
   </para>
<programlisting language="php">
{
    "name": "portal1",
    "addresses": [ "172.16.1.16", 172.16.2.16 ]
}
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.adding-a-tpg">
   <title>Adding a tpg</title>
   <para>
    Copy an existing gateway entry. Maintain the same host and change any or
    all of portal, image and initiator. This allows isolated paths from
    initiator to image.
   </para>
<programlisting language="php">
{
    "host": "igw1", 
    "tpg": [
        {
            "portal": "portal1",
            "image": "archive",
            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
        }
    ]
},
{
    "host": "igw1", 
    "tpg": [
        {
            "portal": portal2,
            "image": data,
            "initiator": iqn.1991-05.com.microsoft:client.example.com
        }
    ]
} 
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.adding-a-gateway">
   <title>Adding a gateway</title>
   <para>
    Similar to adding a tpg, copy an existing gateway entry. Change the host
    of the new entry to the hostname of your second gateway. Do not use this
    for redundancy. This configuration is for two gateways with independent
    images.
   </para>
<programlisting language="php">
{
    "host": "igw1", 
    "tpg": [
        {
            "portal": "portal1",
            "image": "archive",
            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
        }
    ]
},
{
    "host": igw2, 
    "tpg": [
        {
            "portal": portal3,
            "image": data,
            "initiator": iqn.1991-05.com.microsoft:client.example.com
        }
    ]
} 
</programlisting>
   <para>
    Add another portal entry for the address of the second gateway.
   </para>
<programlisting language="php">
{
    "name": "portal1",
    "addresses": [ "172.16.1.16" ]
},
{
    "name": portal3,
    "addresses": [ 172.16.1.17 ]
}
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.adding-a-pool">
   <title>Adding a pool</title>
   <para>
    Duplicate a pool entry. Update the pool and image. Each image is
    accessed via the same network path.
   </para>
<programlisting language="php">
{
    "pool": "rbd",
    "gateways": [
        {
            "host": "igw1", 
            "tpg": [
                {
                    "portal": "portal1",
                    "image": "archive",
                    "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
                }
            ]
        } 
    ] 
},
{
    "pool": car,
    "gateways": [
        {
            "host": "igw1", 
            "tpg": [
                {
                    "portal": "portal1",
                    "image": cement,
                    "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
                }
            ]
        } 
    ] 
}
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.adding-a-target">
   <title>Adding a target</title>
   <para>
    More than one gateway can advertise the same target providing
    redundancy. This configuration requires a kernel that supports the
    <emphasis role="strong">tpg_enabled_sendtargets</emphasis> (formerly
    discoverable_while_disabled) and a
    <emphasis role="strong">targetcli</emphasis> that allows portal creation
    with non-existent addresses.
   </para>
   <para>
    Copy an existing gateway entry. Change the
    <emphasis role="strong">host</emphasis> keyword to
    <emphasis role="strong">target</emphasis>. Update the hostname to an iqn
    value. Consider using <emphasis role="strong">iscsi-name</emphasis> as a
    template. Change the embedded hostname (e.g. igw1 to any). Remove the
    portal.
   </para>
<programlisting language="php">
{
    "host": "igw1", 
    "tpg": [
        {
            "portal": "portal1",
            "image": "archive",
            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
        }
    ]
},
{
    target: iqn.2003-01.org.linux-iscsi.any.x86:sn.db7fc86c644, 
    "tpg": [
        {
            "image": "data",
            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
        }
    ]
} 
</programlisting>
   <para>
    Update the targets section. Add the new target with a list of hosts and
    portals.
   </para>
<programlisting language="php">
{
  "host": "igw1",
  "target": "iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk"
},
{
  hosts: [ 
      { "host": igw1, "portal": portal1 },
      { "host": igw2, "portal": portal4 }
  ],
  "target": "iqn.2003-01.org.linux-iscsi.any.x86:sn.db7fc86c644"
}
</programlisting>
   <para>
    Update the portals section. Add the new portal with the address list
    from both gateways.
   </para>
<programlisting language="php">
{
    "name": "portal1",
    "addresses": [ "172.16.1.16" ]
}
{
    "name": portal4,
    "addresses": [ 172.16.4.16 ]
}
</programlisting>
   <para>
    When applied, each gateway will have two TPGs for the common target.
    Note that a TPG is disabled on each gateway and contains the portal of
    the other gateway.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="ceph.iscsi.authentication">
  <title>Authentication</title>

  <para>
   Iscsi authentication is flexible resulting in many possibilities. The
   four possible top level settings are no authentication, tpg, acls and
   tpg+identified.
  </para>

  <sect2 xml:id="ceph.iscsi.no-authentication">
   <title>No authentication</title>
   <para>
    No authentication means no initiator will require a username and
    password to access any luns for a specified host or target. No
    authentication can be set explicitly or implicitly. Specify a value of
    <emphasis>none</emphasis> for
    <emphasis role="strong">authentication</emphasis> to be set explicitly.
    For example,
   </para>
<programlisting language="php">
{
    "host": "igw1",
    "authentication": none
}
</programlisting>
   <para>
    Removing the entire auth section from the configuration will use no
    authentication implicitly.
   </para>
  </sect2>

  <sect2 xml:id="ceph.iscsi.tpg-authentication">
   <title>TPG authentication</title>
   <para>
    For common credentials or a shared username/password, set
    <emphasis role="strong">authentication</emphasis> to
    <emphasis>tpg</emphasis>. This setting will apply to all initiators for
    the associated host or target. In this example, the same username and
    password are used for the redundant target and a target local to igw1.
   </para>
<programlisting language="php">
{
  "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant",
  "authentication": tpg,
  "tpg": {
      "userid": "common1",
      "password": "pass1"
  }
},
{
    "host": "igw1",
    "authentication": tpg,
    "tpg": {
        "userid": "common1",
        "password": "pass1"
    }
}
</programlisting>
   <para>
    Redundant configurations will have the same credentials across gateways
    but are independent of other configurations. In other words, luns
    configured specifically for a host and multiple redundant configurations
    can have a unique username and password for each.
   </para>
   <para>
    One caveat to note is that any initiator setting will be ignored when
    using <emphasis>tpg</emphasis> authentication. Using common credentials
    does not restrict which initiators may connect. This configuration may
    be suitable in isolated network environments.
   </para>
  </sect2>

  <sect2 xml:id="ceph.iscsi.acl-authentication">
   <title>ACL authentication</title>
   <para>
    For unique credentials for each initiator, set
    <emphasis role="strong">authentication</emphasis> to
    <emphasis>acls</emphasis>. Additionally, only defined initiators are
    allowed to connect.
   </para>
<programlisting language="php">
{
    "host": "igw1",
    "authentication": acls,
    "acls": [
        {
            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20",
            "userid": "initiator1",
            "password": "pass1",
        }
    ]
},
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.tpgidentified-authentication">
   <title>TPG+identified authentication</title>
   <para>
    The previous two authentication settings each have a use, but pair two
    independent features. TPG pairs common credentials with unidentified
    initiators. Acls pair unique credentials with identified initiators.
   </para>
   <para>
    The last authentication setting pairs common credentials with identified
    initiators. This can be imitated by choosing acls and repeating the same
    credentials with each initiator, but the configuration would grow
    unnecessarily and annoy the maintainers. For this configuration, set
    <emphasis role="strong">authentication</emphasis> to
    <emphasis>tpg+identified</emphasis>.
   </para>
   <para>
    This configuration uses the <emphasis>tpg</emphasis> configuration with
    only the authentication keyword changing.
   </para>
<programlisting language="php">
{
  "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant",
  "authentication": tpg+identified,
  "tpg": {
      "userid": "common1",
      "password": "pass1"
  }
},
{
    "host": "igw1",
    "authentication": tpg+identified,
    "tpg": {
        "userid": "common1",
        "password": "pass1"
    }
}
</programlisting>
   <para>
    The list of initiators is gathered from those defined in the pools for
    the given hosts and targets in the authentication section.
   </para>
  </sect2>

  <sect2 xml:id="ceph.iscsi.discovery-and-mutual-authentication">
   <title>Discovery and Mutual authentication</title>
   <para>
    Independent of these four authentication settings is discovery
    authentication. Discovery authentication requires credentials for
    browsing.
   </para>
   <para>
    Authentication for tpg, tpg+identified, acls and discovery support
    mutual authentication. Specifiying the mutual settings requires that the
    target authenticates against the initiator.
   </para>
   <para>
    Discovery and mutual authentication are optional. These options can be
    present, but disabled allowing experimentation with a particular
    configuration. Once decided, disabled entries can be removed without
    harming the configuration.
   </para>
   <para>
    For several possibilities, please see the examples in
    /usr/share/doc/packages/lrbd/samples. Excerpts from one file can be
    combined with others to create unique configurations.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="ceph.iscsi.systemd-service">
  <title>Systemd service</title>

  <para>
   The lrbd utility includes a service file. Systemd will run lrbd on boot
   when the service is enabled. To enable and start the service, run
  </para>

  <literallayout><literal># systemctl enable lrbd</literal><literal># systemctl start lrbd</literal>
  </literallayout>

  <para>
   The service is a one-shot service. Any changes to the lrbd configuration
   do not propogate automatically. To apply the changes without clearing the
   current configuration, run
  </para>

  <para>
   <literal># systemctl reload lrbd</literal>
  </para>

  <para>
   The rationale for this behavior allows administrators to control when the
   configuration is applied to each gateway.
  </para>
 </sect1>
 <sect1 xml:id="ceph.iscsi.managing-configurations">
  <title>Managing configurations</title>

  <para>
   The configuration may be updated directly with
   <emphasis role="strong">lrbd -e</emphasis>. The entire configuration can
   be output with <emphasis role="strong">lrbd -o &gt;</emphasis>
   <emphasis>filename</emphasis> and maintained under your choice of version
   control.
  </para>

  <para>
   Alternatively, the global configuration can be re-imported after making
   changes. Running <emphasis role="strong">lrbd -f</emphasis>
   <emphasis>filename</emphasis> will replace any configuration stored
   within Ceph. The advantage of this method is the input file may contain
   comments for complex configurations.
  </para>

  <para>
   Lastly, configurations may be added cumulatively. For instance, if two
   groups within an organization each have independent gateways and clients
   but wish to share the same Ceph cluster, multiple configurations can be
   maintained independently. Each configuration must be valid by itself, but
   could be divided into separate files by pool or gateway. One file could
   contain gateways A, B and C while another contains D and E.
  </para>

  <para>
   The first configuration is imported as normal with
   <emphasis role="strong">lrbd -f</emphasis>
   <emphasis>ABC.config</emphasis>. The second configuration is added with
   <emphasis role="strong">lrbd -a</emphasis>
   <emphasis>DE.config</emphasis>. The pools and authentication sections
   will be merged. The targets and portals sections are replaced. Depending
   on the configuration, either remove the targets and portals section from
   the <emphasis>DE.config</emphasis> or duplicate these sections in both
   files.
  </para>

  <para>
   The above example could also be executed with
   <emphasis role="strong">lrbd -W</emphasis> which wipes the configuration
   from Ceph and then executes <emphasis role="strong">lrbd -a</emphasis>
   for each file.
  </para>
 </sect1>
 <sect1 xml:id="ceph.iscsi.examples">
  <title>Examples</title>

  <para>
   The following examples are located in
   /usr/share/doc/packages/lrbd/samples. Some are admittedly contrived, but
   show combinations that may more closely match your requirements.
  </para>

  <sect2 xml:id="ceph.iscsi.redundant-gateways">
   <title>Redundant gateways</title>
   <para>
    The requirement is to provide a highly available solution for an
    application accessing Ceph storage. In this example, the image
    <emphasis>city</emphasis> is advertised from two gateways. Each gateway
    has a single nic for iSCSI access. The physical hardware could be the
    following:
   </para>
   <figure>
    <title>Physical Redundant Layout</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="iscsi-redundant-physical.png" />
     </imageobject>
     <textobject><phrase>Physical Redundant
        Layout</phrase>
     </textobject>
    </mediaobject>
   </figure>
   <para>
    The expected configuration would look like the following:
   </para>
   <figure>
    <title>Abstract Redundant Layout</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="iscsi-redundant-abstract.png" />
     </imageobject>
     <textobject><phrase>Abstract Redundant
        Layout</phrase>
     </textobject>
    </mediaobject>
   </figure>
   <para>
    The sample is called 2gateways+no_authentication.json, which is shown
    below:
   </para>
<programlisting>
{
  "auth": [
    {
      "authentication": "none",
      "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant"
    }
  ],
  "targets": [
    {
      "hosts": [
          { "host": "igw1", "portal": "portal1" },
          { "host": "igw2", "portal": "portal2" }
      ],
      "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant"
    }
  ],
  "portals": [
      {
          "name": "portal1",
          "addresses": [ "172.16.1.16"]
      },
      {
          "name": "portal2",
          "addresses": [ "172.16.1.17" ]
      }
  ],
  "pools": [
    {
      "pool": "rbd",
      "gateways": [
        {
          "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant",
          "tpg": [
            {
              "image": "city"
            }
          ]
        }
      ]
    }
  ]
}
</programlisting>
   <para>
    Running lrbd on the first gateway, <emphasis>igw1</emphasis>, will
    output the commands and respective outputs:
   </para>
<programlisting>
modprobe vhost_scsi
modprobe iscsi_target_mod
modprobe tcm_loop
modprobe tcm_fc
modprobe ib_srpt
modprobe tcm_qla2xxx
modprobe target_core_rbd
targetcli /backstores/rbd create name=city dev=/dev/rbd/rbd/city
Created '/sys/kernel/config/target/vhost'.
Created '/sys/kernel/config/target/iscsi'.
Created '/sys/kernel/config/target/loopback'.
Created '/sys/kernel/config/target/fc'.
Created '/sys/kernel/config/target/srpt'.
Created '/sys/kernel/config/target/qla2xxx'.
Created RBD storage object city using /dev/rbd/rbd/city.
targetcli /iscsi create iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant
Created target iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant.
Selected TPG Tag 1.
Created TPG 1.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant create 2
Created TPG 2.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant/tpg2 disable
The TPG has been disabled.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant/tpg1/luns create /backstores/rbd/city
Selected LUN 0.
Created LUN 0.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant/tpg2/luns create /backstores/rbd/city
Selected LUN 0.
Created LUN 0.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant/tpg1/portals create 172.16.1.16
Using default IP port 3260
Created network portal 172.16.1.16:3260.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant/tpg2/portals create 172.16.1.17
Using default IP port 3260
IP address 172.16.1.17 does not exist on this host.
Created network portal 172.16.1.17:3260.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant/tpg1 set attribute authentication=0 demo_mode_write_protect=0 generate_node_acls=1
Parameter authentication is now '0'.
Parameter demo_mode_write_protect is now '0'.
Parameter generate_node_acls is now '1'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant/tpg2 set attribute authentication=0 demo_mode_write_protect=0 generate_node_acls=1
Parameter authentication is now '0'.
Parameter demo_mode_write_protect is now '0'.
Parameter generate_node_acls is now '1'.
</programlisting>
   <para>
    To inspect the configuration, run
   </para>
   <para>
    <literal># targetcli ls</literal>
   </para>
   <para>
    The output will be
   </para>
<programlisting>
o- / ..................................................................... [...]
  o- backstores .......................................................... [...]
  | o- fileio ............................................... [0 Storage Object]
  | o- iblock ............................................... [0 Storage Object]
  | o- pscsi ................................................ [0 Storage Object]
  | o- rbd .................................................. [1 Storage Object]
  | | o- city .................................... [/dev/rbd/rbd/city activated]
  | o- rd_mcp ............................................... [0 Storage Object]
  o- ib_srpt ....................................................... [0 Targets]
  o- iscsi .......................................................... [1 Target]
  | o- iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant ............... [2 TPGs]
  |   o- tpg1 ........................................................ [enabled]
  |   | o- acls ....................................................... [0 ACLs]
  |   | o- luns ........................................................ [1 LUN]
  |   | | o- lun0 ............................... [rbd/city (/dev/rbd/rbd/city)]
  |   | o- portals .................................................. [1 Portal]
  |   |   o- 172.16.1.16:3260 .............................. [OK, iser disabled]
  |   o- tpg2 ....................................................... [disabled]
  |     o- acls ....................................................... [0 ACLs]
  |     o- luns ........................................................ [1 LUN]
  |     | o- lun0 ............................... [rbd/city (/dev/rbd/rbd/city)]
  |     o- portals .................................................. [1 Portal]
  |       o- 172.16.1.17:3260 .............................. [OK, iser disabled]
  o- loopback ...................................................... [0 Targets]
  o- qla2xxx ....................................................... [0 Targets]
  o- tcm_fc ........................................................ [0 Targets]
  o- vhost ......................................................... [0 Targets]
</programlisting>
   <para>
    Note that tpg2 is disabled since this portal does not exist on gateway
    <emphasis>igw1</emphasis>. Applying the same configuration on
    <emphasis>igw2</emphasis> will result in the reverse. Tpg1 will be
    disabled and tpg2 will be enabled.
   </para>
   <para>
    From the initiator, a discovery of <emphasis>igw1</emphasis> will output
    the following:
   </para>
<programlisting>
# iscsiadm -m discovery -t st -p 172.16.1.16
172.16.1.16:3260,1 iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant
172.16.1.17:3260,2 iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant
</programlisting>
   <para>
    A discovery of <emphasis>igw2</emphasis> will give the same results.
   </para>
   <para>
    Once discovered, both gateways can be logged into simultaneously with
   </para>
   <para>
    <literal># iscsiadm -m node -L all</literal>
   </para>
   <para>
    And multipath will list both paths as separate devices.
   </para>
<programlisting>
# multipath -ll
3600140569accc1f6b1f3853bb38f8deb dm-0 SUSE,RBD
size=1.0G features='0' hwhandler='0' wp=rw
|-+- policy='service-time 0' prio=1 status=active
| `- 8:0:0:0 sdb 8:16 active ready running
`-+- policy='service-time 0' prio=1 status=enabled
  `- 9:0:0:0 sda 8:0  active ready running
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.access-control">
   <title>Access control</title>
   <para>
    Rather than see a trivial example of iSCSI access controls, this example
    shows access lists on two independent gateways each accessing different
    images within Ceph and restricting access to two clients. Additionally,
    each gateway has redundant network interfaces.
   </para>
   <figure>
    <title>Physical Acls Layout</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="iscsi-acls-physical.png" />
     </imageobject>
     <textobject><phrase>Physical Acls Layout</phrase>
     </textobject>
    </mediaobject>
   </figure>
   <para>
    Ceph is configured for five images across three pools. The pool
    <emphasis role="strong">rbd</emphasis> contains
    <emphasis>city</emphasis>, <emphasis>writers</emphasis> and
    <emphasis>wood</emphasis>, <emphasis role="strong">car</emphasis>
    contains <emphasis>cement</emphasis> and
    <emphasis role="strong">whirl</emphasis> contains
    <emphasis>cheese</emphasis>. The rationale is to simply demonstrate that
    multiple images per pool and multiple pools work. A typical
    configuration would be a subset.
   </para>
   <para>
    Each client has an initiator iqn. Each gateway has a target iqn with a
    single portal of two network interfaces.
   </para>
   <figure>
    <title>Abstract Acls Layout</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="iscsi-acls-abstract.png" />
     </imageobject>
     <textobject><phrase>Abstract Acls Layout</phrase>
     </textobject>
    </mediaobject>
   </figure>
   <para>
    The sample is acls.json and is shown below:
   </para>
<programlisting>
{
    "targets": [
      {
        "host": "igw1",
        "target": "iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141"
      },
      {
        "host": "igw2",
        "target": "iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579"
      }
    ],
    "auth": [
        {
            "host": "igw1", 
            "authentication": "acls", 
            "acls": [
                {
                    "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20",
                    "userid": "initiator1", 
                    "password": "pass1"
                }
            ]
        }, 
        {
            "host": "igw2", 
            "authentication": "acls", 
            "acls": [
                {
                    "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20",
                    "userid": "initiator1", 
                    "password": "pass1"
                },
                {
                    "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f24", 
                    "userid": "initiator2", 
                    "password": "pass5"
                } 
            ] 
        }
    ], 
    "portals": [
        {
            "name": "portal1",
            "addresses": [ "172.16.1.16", "172.16.2.16" ]
        },
        {
            "name": "portal2",
            "addresses": [ "172.16.1.17", "172.16.2.17" ]
        }
    ],
    "pools": [
        {
            "pool": "rbd",
            "gateways": [
                {
                    "host": "igw1", 
                    "tpg": [
                        {
                            "portal": "portal1",
                            "image": "city",
                            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20"
                        }
                    ]
                }, 
                {
                    "host": "igw2", 
                    "tpg": [
                        {
                            "portal": "portal2",
                            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20", 
                            "image": "writers"
                        }, 
                        {
                            "portal": "portal2",
                            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f24", 
                            "image": "writers"
                        }, 
                        {
                            "portal": "portal2",
                            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f24", 
                            "image": "wood"
                        }
                    ] 
                }
            ] 
        },
        {
            "pool": "car",
            "gateways": [
                {
                    "host": "igw1", 
                    "tpg": [
                        {
                            "portal": "portal1",
                            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20",
                            "image": "cement"
                        }
                    ]
                } 
            ] 
        },
        {
            "pool": "whirl",
            "gateways": [
                {
                    "host": "igw2",
                    "tpg": [
                        {
                            "portal": "portal2",
                            "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20",
                            "image": "cheese"
                        }
                    ]
                }
            ]
        }
    ]
}
</programlisting>
   <para>
    Unlike the previous example where both gateways are configured
    essentially identically, these gateways are independent. Running lrbd on
    <emphasis>igw1</emphasis> results in the following
   </para>
<programlisting>
modprobe vhost_scsi
modprobe iscsi_target_mod
modprobe tcm_loop
modprobe tcm_fc
modprobe ib_srpt
modprobe tcm_qla2xxx
modprobe target_core_rbd
targetcli /backstores/rbd create name=city dev=/dev/rbd/rbd/city
Created '/sys/kernel/config/target/vhost'.
Created '/sys/kernel/config/target/iscsi'.
Created '/sys/kernel/config/target/loopback'.
Created '/sys/kernel/config/target/fc'.
Created '/sys/kernel/config/target/srpt'.
Created '/sys/kernel/config/target/qla2xxx'.
Created RBD storage object city using /dev/rbd/rbd/city.
targetcli /backstores/rbd create name=cement dev=/dev/rbd/car/cement
Created RBD storage object cement using /dev/rbd/car/cement.
targetcli /iscsi create iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141
Created target iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141.
Selected TPG Tag 1.
Created TPG 1.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/luns create /backstores/rbd/cement
Selected LUN 0.
Created LUN 0.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/luns create /backstores/rbd/city
Selected LUN 1.
Created LUN 1.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/portals create 172.16.1.16
Using default IP port 3260
Created network portal 172.16.1.16:3260.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/portals create 172.16.2.16
Using default IP port 3260
Created network portal 172.16.2.16:3260.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/portals create 172.16.1.16
Using default IP port 3260
This NetworkPortal already exists in configFS.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/portals create 172.16.2.16
Using default IP port 3260
This NetworkPortal already exists in configFS.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/acls create iqn.1996-04.de.suse:01:e6ca28cc9f20
Created Node ACL for iqn.1996-04.de.suse:01:e6ca28cc9f20
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 create 1 1
Created Mapped LUN 1.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 create 0 0
Created Mapped LUN 0.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 set auth userid=initiator1 password=pass1
Parameter password is now 'pass1'.
Parameter userid is now 'initiator1'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1 set attribute authentication=1 demo_mode_write_protect=0 generate_node_acls=0
Parameter authentication is now '1'.
Parameter demo_mode_write_protect is now '0'.
Parameter generate_node_acls is now '0'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 set auth userid=initiator1 password=pass1
Parameter password is now 'pass1'.
Parameter userid is now 'initiator1'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141/tpg1 set attribute authentication=1 demo_mode_write_protect=0 generate_node_acls=0
Parameter authentication is now '1'.
Parameter demo_mode_write_protect is now '0'.
Parameter generate_node_acls is now '0'.
</programlisting>
   <para>
    While running lrbd on <emphasis>igw2</emphasis> outputs
   </para>
<programlisting>
modprobe vhost_scsi
modprobe iscsi_target_mod
modprobe tcm_loop
modprobe tcm_fc
modprobe ib_srpt
modprobe tcm_qla2xxx
modprobe target_core_rbd
targetcli /backstores/rbd create name=mental dev=/dev/rbd/whirl/mental
Created '/sys/kernel/config/target/vhost'.
Created '/sys/kernel/config/target/iscsi'.
Created '/sys/kernel/config/target/loopback'.
Created '/sys/kernel/config/target/fc'.
Created '/sys/kernel/config/target/srpt'.
Created '/sys/kernel/config/target/qla2xxx'.
Created RBD storage object mental using /dev/rbd/whirl/mental.
targetcli /backstores/rbd create name=writers dev=/dev/rbd/rbd/writers
Created RBD storage object writers using /dev/rbd/rbd/writers.
targetcli /backstores/rbd create name=wood dev=/dev/rbd/rbd/wood
Created RBD storage object wood using /dev/rbd/rbd/wood.
targetcli /iscsi create iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579
Created target iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579.
Selected TPG Tag 1.
Created TPG 1.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/luns create /backstores/rbd/wood
Selected LUN 0.
Created LUN 0.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/luns create /backstores/rbd/writers
Selected LUN 1.
Created LUN 1.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/luns create /backstores/rbd/mental
Selected LUN 2.
Created LUN 2.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/portals create 172.16.1.17
Using default IP port 3260
Created network portal 172.16.1.17:3260.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/portals create 172.16.2.17
Using default IP port 3260
Created network portal 172.16.2.17:3260.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/portals create 172.16.1.17
Using default IP port 3260
This NetworkPortal already exists in configFS.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/portals create 172.16.2.17
Using default IP port 3260
This NetworkPortal already exists in configFS.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/portals create 172.16.1.17
Using default IP port 3260
This NetworkPortal already exists in configFS.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/portals create 172.16.2.17
Using default IP port 3260
This NetworkPortal already exists in configFS.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls create iqn.1996-04.de.suse:01:e6ca28cc9f24
Created Node ACL for iqn.1996-04.de.suse:01:e6ca28cc9f24
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls create iqn.1996-04.de.suse:01:e6ca28cc9f20
Created Node ACL for iqn.1996-04.de.suse:01:e6ca28cc9f20
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 create 1 1
Created Mapped LUN 1.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f24 create 1 1
Created Mapped LUN 1.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f24 create 0 0
Created Mapped LUN 0.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 create 2 2
Created Mapped LUN 2.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 set auth userid=initiator1 password=pass1
Parameter password is now 'pass1'.
Parameter userid is now 'initiator1'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f24 set auth userid=initiator2 password=pass5
Parameter password is now 'pass5'.
Parameter userid is now 'initiator2'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1 set attribute authentication=1 demo_mode_write_protect=0 generate_node_acls=0
Parameter authentication is now '1'.
Parameter demo_mode_write_protect is now '0'.
Parameter generate_node_acls is now '0'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 set auth userid=initiator1 password=pass1
Parameter password is now 'pass1'.
Parameter userid is now 'initiator1'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f24 set auth userid=initiator2 password=pass5
Parameter password is now 'pass5'.
Parameter userid is now 'initiator2'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1 set attribute authentication=1 demo_mode_write_protect=0 generate_node_acls=0
Parameter authentication is now '1'.
Parameter demo_mode_write_protect is now '0'.
Parameter generate_node_acls is now '0'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f20 set auth userid=initiator1 password=pass1
Parameter password is now 'pass1'.
Parameter userid is now 'initiator1'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1/acls/iqn.1996-04.de.suse:01:e6ca28cc9f24 set auth userid=initiator2 password=pass5
Parameter password is now 'pass5'.
Parameter userid is now 'initiator2'.
targetcli /iscsi/iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579/tpg1 set attribute authentication=1 demo_mode_write_protect=0 generate_node_acls=0
Parameter authentication is now '1'.
Parameter demo_mode_write_protect is now '0'.
Parameter generate_node_acls is now '0'.
</programlisting>
   <para>
    The first gateway will share the two images, <emphasis>cement</emphasis>
    and <emphasis>city</emphasis> with only one initiator. This initiator
    can connect to either image over either interface, but must login with
    the credentials specified.
   </para>
<programlisting>
o- / ..................................................................... [...]
  o- backstores .......................................................... [...]
  | o- fileio ............................................... [0 Storage Object]
  | o- iblock ............................................... [0 Storage Object]
  | o- pscsi ................................................ [0 Storage Object]
  | o- rbd ................................................. [2 Storage Objects]
  | | o- cement ................................ [/dev/rbd/car/cement activated]
  | | o- city .................................... [/dev/rbd/rbd/city activated]
  | o- rd_mcp ............................................... [0 Storage Object]
  o- ib_srpt ....................................................... [0 Targets]
  o- iscsi .......................................................... [1 Target]
  | o- iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141 ............ [1 TPG]
  |   o- tpg1 ........................................................ [enabled]
  |     o- acls ........................................................ [1 ACL]
  |     | o- iqn.1996-04.de.suse:01:e6ca28cc9f20 ............... [2 Mapped LUNs]
  |     |   o- mapped_lun0 ......................................... [lun0 (rw)]
  |     |   o- mapped_lun1 ......................................... [lun1 (rw)]
  |     o- luns ....................................................... [2 LUNs]
  |     | o- lun0 ........................... [rbd/cement (/dev/rbd/car/cement)]
  |     | o- lun1 ............................... [rbd/city (/dev/rbd/rbd/city)]
  |     o- portals ................................................. [2 Portals]
  |       o- 172.16.1.16:3260 .............................. [OK, iser disabled]
  |       o- 172.16.2.16:3260 .............................. [OK, iser disabled]
  o- loopback ...................................................... [0 Targets]
  o- qla2xxx ....................................................... [0 Targets]
  o- tcm_fc ........................................................ [0 Targets]
  o- vhost ......................................................... [0 Targets]
</programlisting>
   <para>
    The second gateway shares three images - <emphasis>cheese</emphasis>,
    <emphasis>wood</emphasis> and <emphasis>writers</emphasis>. The first
    initiator can access <emphasis>writers</emphasis> and
    <emphasis>cheese</emphasis>, but not <emphasis>wood</emphasis>. The
    second initiator can access <emphasis>wood</emphasis> and
    <emphasis>writers</emphasis>, but not <emphasis>cheese</emphasis>.
   </para>
   <para>
    Note that although <emphasis>writers</emphasis> is accessible by both
    initiators, two independently acting applications can still corrupt the
    data. Consider the example of mounting a filesystem (e.g. ext4, xfs) to
    two different servers and writing both simultaneously. Corruption will
    ensue.
   </para>
   <para>
    However, an administrator may have an application requiring a cold spare
    where this solution may be suitable.
   </para>
<programlisting>
o- / ..................................................................... [...]
  o- backstores .......................................................... [...]
  | o- fileio ............................................... [0 Storage Object]
  | o- iblock ............................................... [0 Storage Object]
  | o- pscsi ................................................ [0 Storage Object]
  | o- rbd ................................................. [3 Storage Objects]
  | | o- cheese .............................. [/dev/rbd/whirl/cheese activated]
  | | o- wood .................................... [/dev/rbd/rbd/wood activated]
  | | o- writers .............................. [/dev/rbd/rbd/writers activated]
  | o- rd_mcp ............................................... [0 Storage Object]
  o- ib_srpt ....................................................... [0 Targets]
  o- iscsi .......................................................... [1 Target]
  | o- iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579 ............ [1 TPG]
  |   o- tpg1 ........................................................ [enabled]
  |     o- acls ....................................................... [2 ACLs]
  |     | o- iqn.1996-04.de.suse:01:e6ca28cc9f20 ............... [2 Mapped LUNs]
  |     | | o- mapped_lun1 ......................................... [lun1 (rw)]
  |     | | o- mapped_lun2 ......................................... [lun2 (rw)]
  |     | o- iqn.1996-04.de.suse:01:e6ca28cc9f24 ............... [2 Mapped LUNs]
  |     |   o- mapped_lun0 ......................................... [lun0 (rw)]
  |     |   o- mapped_lun1 ......................................... [lun1 (rw)]
  |     o- luns ....................................................... [3 LUNs]
  |     | o- lun0 ............................... [rbd/wood (/dev/rbd/rbd/wood)]
  |     | o- lun1 ......................... [rbd/writers (/dev/rbd/rbd/writers)]
  |     | o- lun2 ......................... [rbd/cheese (/dev/rbd/whirl/cheese)]
  |     o- portals ................................................. [2 Portals]
  |       o- 172.16.1.17:3260 .............................. [OK, iser disabled]
  |       o- 172.16.2.17:3260 .............................. [OK, iser disabled]
  o- loopback ...................................................... [0 Targets]
  o- qla2xxx ....................................................... [0 Targets]
  o- tcm_fc ........................................................ [0 Targets]
  o- vhost ......................................................... [0 Targets]
</programlisting>
   <para>
    From the first initiator, a discovery of <emphasis>igw1</emphasis> will
    output the following:
   </para>
<programlisting>
# iscsiadm -m discovery -t st -p 172.16.1.16
172.16.1.16:3260,1 iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141
172.16.2.16:3260,1 iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141
</programlisting>
   <para>
    Before logging in, the credentials must be configured.
   </para>
<programlisting>
# iscsiadm -m node -o update --name=node.session.auth.username --value=initiator1
# iscsiadm -m node -o update --name=node.session.auth.password --value=pass1
# iscsiadm -m node -o update --name=node.session.auth.authmethod --value=CHAP
# iscsiadm -m node -L all
</programlisting>
   <para>
    These values can be verified with
   </para>
   <para>
    <literal># iscsiadm -m node -o show</literal>
   </para>
   <para>
    Next, login from the first initiator to the <emphasis>igw1</emphasis>
    with
   </para>
   <para>
    <literal># iscsiadm -m node -L all</literal>
   </para>
   <para>
    If the login fails, consider running <emphasis role="strong">journalctl
    -f</emphasis> on <emphasis>igw1</emphasis> to help diagnose the issue.
   </para>
   <para>
    Once the login is successful, four devices will be available.
   </para>
<programlisting>
# multipath -ll
360014052d4012252b4e4f69849df36eb dm-1 SUSE,RBD
size=1.0G features='0' hwhandler='0' wp=rw
|-+- policy='service-time 0' prio=1 status=active
| `- 7:0:0:0 sdb 8:16 active ready running
`-+- policy='service-time 0' prio=1 status=enabled
  `- 6:0:0:0 sda 8:0  active ready running
360014050c2b99be7c3c421f8ef1d34df dm-0 SUSE,RBD
size=1.0G features='0' hwhandler='0' wp=rw
|-+- policy='service-time 0' prio=1 status=active
| `- 6:0:0:1 sdc 8:32 active ready running
`-+- policy='service-time 0' prio=1 status=enabled
  `- 7:0:0:1 sdd 8:48 active ready running
</programlisting>
   <para>
    Now the first initiator can log into <emphasis>igw2</emphasis> as well.
    After running a discovery,
   </para>
   <para>
    <literal># iscsiadm -m discovery -t st -p 172.16.1.17</literal>
   </para>
   <para>
    both paths for each gateway will be displayed from
   </para>
<programlisting>
# iscsiadm -m node
172.16.1.16:3260,1 iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141
172.16.2.16:3260,1 iqn.2003-01.org.linux-iscsi.igw1.x86:sn.1a2b6ae09141
172.16.2.17:3260,1 iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579
172.16.1.17:3260,1 iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579
</programlisting>
   <para>
    Initialize the credentials if necessary and login.
   </para>
<programlisting>
# iscsiadm -m node -o update --name=node.session.auth.username --value=initiator1
# iscsiadm -m node -o update --name=node.session.auth.password --value=pass1
# iscsiadm -m node -o update --name=node.session.auth.authmethod --value=CHAP
# iscsiadm -m node -L all
</programlisting>
   <para>
    The last command will complain that two sessions are already active. The
    devices for <emphasis>igw2</emphasis> have been added. Verify with
   </para>
<programlisting>
# multipath -ll
360014052d4012252b4e4f69849df36eb dm-1 SUSE,RBD
size=1.0G features='0' hwhandler='0' wp=rw
|-+- policy='service-time 0' prio=1 status=active
| `- 7:0:0:0  sdb 8:16  active ready running
`-+- policy='service-time 0' prio=1 status=enabled
  `- 6:0:0:0  sda 8:0   active ready running
360014050c2b99be7c3c421f8ef1d34df dm-0 SUSE,RBD
size=1.0G features='0' hwhandler='0' wp=rw
|-+- policy='service-time 0' prio=1 status=active
| `- 6:0:0:1  sdc 8:32  active ready running
`-+- policy='service-time 0' prio=1 status=enabled
  `- 7:0:0:1  sdd 8:48  active ready running
360014054267d0d72a5447d3bc42c50f9 dm-2 SUSE,RBD
size=1.0G features='0' hwhandler='0' wp=rw
|-+- policy='service-time 0' prio=1 status=active
| `- 10:0:0:1 sde 8:64  active ready running
`-+- policy='service-time 0' prio=1 status=enabled
  `- 11:0:0:1 sdg 8:96  active ready running
36001405f2fc087d51114b909e0cfcfd7 dm-3 SUSE,RBD
size=1.0G features='0' hwhandler='0' wp=rw
|-+- policy='service-time 0' prio=1 status=active
| `- 10:0:0:2 sdf 8:80  active ready running
`-+- policy='service-time 0' prio=1 status=enabled
  `- 11:0:0:2 sdh 8:112 active ready running
</programlisting>
   <para>
    The second initiator can log into <emphasis>igw2</emphasis> following
    the same steps as the first initiator.
   </para>
<programlisting>
# iscsiadm -m discovery -t st -p 172.16.1.17
172.16.1.17:3260,1 iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579
172.16.2.17:3260,1 iqn.2003-01.org.linux-iscsi.igw2.x86:sn.b611a553e579
</programlisting>
   <para>
    Note the different username and password.
   </para>
<programlisting>
# iscsiadm -m node -o update --name=node.session.auth.username --value=initiator2
# iscsiadm -m node -o update --name=node.session.auth.password --value=pass5
# iscsiadm -m node -o update --name=node.session.auth.authmethod --value=CHAP
# iscsiadm -m node -L all
</programlisting>
   <para>
    The devices added on the second initiator are
   </para>
<programlisting>
# multipath -ll
3600140576c55e60dd7d4ae2982bce328 dm-1 SUSE,RBD
size=1.0G features='0' hwhandler='0' wp=rw
|-+- policy='service-time 0' prio=1 status=active
| `- 13:0:0:0 sdb 8:16 active ready running
`-+- policy='service-time 0' prio=1 status=enabled
  `- 12:0:0:0 sda 8:0  active ready running
36001405f39addb925d44472951de78da dm-0 SUSE,RBD
size=1.0G features='0' hwhandler='0' wp=rw
|-+- policy='service-time 0' prio=1 status=active
| `- 12:0:0:1 sdc 8:32 active ready running
`-+- policy='service-time 0' prio=1 status=enabled
  `- 13:0:0:1 sdd 8:48 active ready running
</programlisting>
  </sect2>

  <sect2 xml:id="ceph.iscsi.redundant-gateways-with-isolated-paths">
   <title>Redundant gateways with isolated paths</title>
   <para>
    A potentially useful configuration concerns different requirements for
    images. Imagine customizing network buffers or having greater bandwidth
    for one network interface but not another.
   </para>
   <para>
    The requirement is to dedicate one network interface for the image
    <emphasis>city</emphasis> and the other network interface to
    <emphasis>wood</emphasis>. The administrator wishes to have the image
    <emphasis>archive</emphasis> accessible from one gateway for
    experimentation. Additionally, the images <emphasis>city</emphasis> and
    <emphasis>wood</emphasis> must be restricted to their respective
    initiators, but <emphasis>archive</emphasis> is not.
   </para>
   <para>
    The physical layout is identical to the previous example.
   </para>
   <figure>
    <title>Physical Isolated Layout</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="iscsi-acls-physical.png" />
     </imageobject>
     <textobject><phrase>Physical Isolated
        Layout</phrase>
     </textobject>
    </mediaobject>
   </figure>
   <para>
    The organization is different. Gateway <emphasis>igw1</emphasis> has
    three targets and gateway <emphasis>igw2</emphasis> has two. Each
    network interface is associated with a portal.
   </para>
   <figure>
    <title>Abstract Isolated Layout</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="iscsi-isolated-abstract.png" />
     </imageobject>
     <textobject><phrase>Abstract Isolated
        Layout</phrase>
     </textobject>
    </mediaobject>
   </figure>
   <para>
    The configuration sample is
    plain+2gateways+2portals+2images+isolated+combined.json and shown here.
   </para>
<programlisting>
{
  "auth": [
        {
          "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant",
          "authentication": "acls", 
          "acls": [ 
            {
              "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20",
              "userid": "common1", 
              "password": "pass1"
            }
          ]
        },
        {
          "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant-too",
          "authentication": "acls", 
          "acls": [ 
            {
              "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f24",
              "userid": "common2", 
              "password": "pass2"
            }
          ]
        },
        {
            "host": "igw1", 
            "authentication": "tpg", 
            "tpg": {
                "userid": "common1", 
                "password": "pass1"
            }
        } 
  ], 
  "targets": [
      {
        "hosts": [
            { "host": "igw1", "portal": "portal1" },
            { "host": "igw2", "portal": "portal2" }
        ],
        "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant"
      },
      {
        "hosts": [
            { "host": "igw1", "portal": "portal3" },
            { "host": "igw2", "portal": "portal4" }
        ],
        "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant-too"
      },
      {
        "host": "igw1",
        "target": "iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk"
      }
  ], 
  "portals": [
      {
          "name": "portal1",
          "addresses": [ "172.16.1.16" ]
      },
      {
          "name": "portal2",
          "addresses": [ "172.16.1.17"  ]
      },
      {
          "name": "portal3",
          "addresses": [ "172.16.2.16" ]
      },
      {
          "name": "portal4",
          "addresses": [ "172.16.2.17" ]
      }
  ],
  "pools": [
    {
      "pool": "rbd",
      "gateways": [
        {
          "host": "igw1", 
          "tpg": [
            {
              "image": "archive",
              "portal": "portal1"
            }
          ]
        }, 
        {
          "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant",
          "tpg": [
            {
              "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f20",
              "image": "city"
            }
          ] 
        }, 
        {
          "target": "iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant-too",
          "tpg": [
            {
              "initiator": "iqn.1996-04.de.suse:01:e6ca28cc9f24",
              "image": "wood"
            }
          ] 
        } 
      ] 
    } 
  ]
}
</programlisting>
   <para>
    The output of the lrbd commands is similar on both gateways. Since
    neither demonstrates anything unique from the previous examples, these
    are omitted. Inspecting both gateways will show the differences from the
    first example.
   </para>
   <para>
    On <emphasis>igw1</emphasis>, run <literal># targetcli ls</literal>
   </para>
<programlisting>
o- / ..................................................................... [...]
  o- backstores .......................................................... [...]
  | o- fileio ............................................... [0 Storage Object]
  | o- iblock ............................................... [0 Storage Object]
  | o- pscsi ................................................ [0 Storage Object]
  | o- rbd ................................................. [3 Storage Objects]
  | | o- archive .............................. [/dev/rbd/rbd/archive activated]
  | | o- city .................................... [/dev/rbd/rbd/city activated]
  | | o- wood .................................... [/dev/rbd/rbd/wood activated]
  | o- rd_mcp ............................................... [0 Storage Object]
  o- ib_srpt ....................................................... [0 Targets]
  o- iscsi ......................................................... [3 Targets]
  | o- iqn.2003-01.org.linux-iscsi.generic.x86:sn.abcdefghijk .......... [1 TPG]
  | | o- tpg1 ........................................................ [enabled]
  | |   o- acls ....................................................... [0 ACLs]
  | |   o- luns ........................................................ [1 LUN]
  | |   | o- lun0 ......................... [rbd/archive (/dev/rbd/rbd/archive)]
  | |   o- portals .................................................. [1 Portal]
  | |     o- 172.16.1.16:3260 .............................. [OK, iser disabled]
  | o- iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant ............... [2 TPGs]
  | | o- tpg1 ........................................................ [enabled]
  | | | o- acls ........................................................ [1 ACL]
  | | | | o- iqn.1996-04.de.suse:01:e6ca28cc9f20 ................ [1 Mapped LUN]
  | | | |   o- mapped_lun0 ......................................... [lun0 (rw)]
  | | | o- luns ........................................................ [1 LUN]
  | | | | o- lun0 ............................... [rbd/city (/dev/rbd/rbd/city)]
  | | | o- portals .................................................. [1 Portal]
  | | |   o- 172.16.1.16:3260 .............................. [OK, iser disabled]
  | | o- tpg2 ....................................................... [disabled]
  | |   o- acls ........................................................ [1 ACL]
  | |   | o- iqn.1996-04.de.suse:01:e6ca28cc9f20 ................ [1 Mapped LUN]
  | |   |   o- mapped_lun0 ......................................... [lun0 (rw)]
  | |   o- luns ........................................................ [1 LUN]
  | |   | o- lun0 ............................... [rbd/city (/dev/rbd/rbd/city)]
  | |   o- portals .................................................. [1 Portal]
  | |     o- 172.16.1.17:3260 .............................. [OK, iser disabled]
  | o- iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant-too ........... [2 TPGs]
  |   o- tpg1 ........................................................ [enabled]
  |   | o- acls ........................................................ [1 ACL]
  |   | | o- iqn.1996-04.de.suse:01:e6ca28cc9f24 ................ [1 Mapped LUN]
  |   | |   o- mapped_lun0 ......................................... [lun0 (rw)]
  |   | o- luns ........................................................ [1 LUN]
  |   | | o- lun0 ............................... [rbd/wood (/dev/rbd/rbd/wood)]
  |   | o- portals .................................................. [1 Portal]
  |   |   o- 172.16.2.16:3260 .............................. [OK, iser disabled]
  |   o- tpg2 ....................................................... [disabled]
  |     o- acls ........................................................ [1 ACL]
  |     | o- iqn.1996-04.de.suse:01:e6ca28cc9f24 ................ [1 Mapped LUN]
  |     |   o- mapped_lun0 ......................................... [lun0 (rw)]
  |     o- luns ........................................................ [1 LUN]
  |     | o- lun0 ............................... [rbd/wood (/dev/rbd/rbd/wood)]
  |     o- portals .................................................. [1 Portal]
  |       o- 172.16.2.17:3260 .............................. [OK, iser disabled]
  o- loopback ...................................................... [0 Targets]
  o- qla2xxx ....................................................... [0 Targets]
  o- tcm_fc ........................................................ [0 Targets]
  o- vhost ......................................................... [0 Targets]
</programlisting>
   <para>
    Note the nonredundant target shares the archive image. Both redundant
    targets have two TPGs each. The first is enabled and the second
    disabled.
   </para>
   <para>
    The configuration for <emphasis>igw2</emphasis> shows
   </para>
<programlisting>
o- / ..................................................................... [...]
  o- backstores .......................................................... [...]
  | o- fileio ............................................... [0 Storage Object]
  | o- iblock ............................................... [0 Storage Object]
  | o- pscsi ................................................ [0 Storage Object]
  | o- rbd ................................................. [2 Storage Objects]
  | | o- city .................................... [/dev/rbd/rbd/city activated]
  | | o- wood .................................... [/dev/rbd/rbd/wood activated]
  | o- rd_mcp ............................................... [0 Storage Object]
  o- ib_srpt ....................................................... [0 Targets]
  o- iscsi ......................................................... [2 Targets]
  | o- iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant ............... [2 TPGs]
  | | o- tpg1 ....................................................... [disabled]
  | | | o- acls ........................................................ [1 ACL]
  | | | | o- iqn.1996-04.de.suse:01:e6ca28cc9f20 ................ [1 Mapped LUN]
  | | | |   o- mapped_lun0 ......................................... [lun0 (rw)]
  | | | o- luns ........................................................ [1 LUN]
  | | | | o- lun0 ............................... [rbd/city (/dev/rbd/rbd/city)]
  | | | o- portals .................................................. [1 Portal]
  | | |   o- 172.16.1.16:3260 .............................. [OK, iser disabled]
  | | o- tpg2 ........................................................ [enabled]
  | |   o- acls ........................................................ [1 ACL]
  | |   | o- iqn.1996-04.de.suse:01:e6ca28cc9f20 ................ [1 Mapped LUN]
  | |   |   o- mapped_lun0 ......................................... [lun0 (rw)]
  | |   o- luns ........................................................ [1 LUN]
  | |   | o- lun0 ............................... [rbd/city (/dev/rbd/rbd/city)]
  | |   o- portals .................................................. [1 Portal]
  | |     o- 172.16.1.17:3260 .............................. [OK, iser disabled]
  | o- iqn.2003-01.org.linux-iscsi.igw.x86:sn.redundant-too ........... [2 TPGs]
  |   o- tpg1 ....................................................... [disabled]
  |   | o- acls ........................................................ [1 ACL]
  |   | | o- iqn.1996-04.de.suse:01:e6ca28cc9f24 ................ [1 Mapped LUN]
  |   | |   o- mapped_lun0 ......................................... [lun0 (rw)]
  |   | o- luns ........................................................ [1 LUN]
  |   | | o- lun0 ............................... [rbd/wood (/dev/rbd/rbd/wood)]
  |   | o- portals .................................................. [1 Portal]
  |   |   o- 172.16.2.16:3260 .............................. [OK, iser disabled]
  |   o- tpg2 ........................................................ [enabled]
  |     o- acls ........................................................ [1 ACL]
  |     | o- iqn.1996-04.de.suse:01:e6ca28cc9f24 ................ [1 Mapped LUN]
  |     |   o- mapped_lun0 ......................................... [lun0 (rw)]
  |     o- luns ........................................................ [1 LUN]
  |     | o- lun0 ............................... [rbd/wood (/dev/rbd/rbd/wood)]
  |     o- portals .................................................. [1 Portal]
  |       o- 172.16.2.17:3260 .............................. [OK, iser disabled]
  o- loopback ...................................................... [0 Targets]
  o- qla2xxx ....................................................... [0 Targets]
  o- tcm_fc ........................................................ [0 Targets]
  o- vhost ......................................................... [0 Targets]
</programlisting>
   <para>
    Only the redundant targets are present. For each target, tpg1 is
    disabled and tpg2 is enabled. Essentially, the reverse of the first
    gateway.
   </para>
   <para>
    Discovery and authentication is the same as the previous example. Both
    redundant targets are restricted to their respective initiators. The
    exception is the <emphasis>archive</emphasis> image may be accessed by
    any initiator with the correct credentials.
   </para>
  </sect2>
 </sect1>
</chapter>
