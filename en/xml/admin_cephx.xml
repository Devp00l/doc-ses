<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.storage.cephx">
 <title>Client Management and Authentication with &cephx;</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer>tbazant@suse.com</dm:maintainer>
   <dm:status>editing</dm:status>
   <dm:deadline></dm:deadline>
   <dm:priority></dm:priority>
   <dm:translation></dm:translation>
   <dm:languages></dm:languages>
   <dm:release>SES2.1</dm:release>
  </dm:docmanager>
 </info>
 <para>
  To identify clients and protect against man-in-the-middle attacks, &ceph; provides its &cephx; authentication system.
  <emphasise>Clients</emphasise> in this context are either human users&mdash;such as the admin user&mdash;or &ceph;-related services/daemons,
 for example OSDs, monitors, or &rgw;s.
 </para>
 <note>
  <para>
   The &cephx; protocol does not address data encryption in transport, such as SSL/TLS.
  </para>
 </note>
 <sect1 xml:id="storage.cephx.arch">
  <!-- http://docs.ceph.com/docs/master/architecture/#high-availability-authentication -->
  <title>Authentication Architecture</title>
  <para> &cephx; uses shared secret keys for authentication, meaning both the
   client and the monitor cluster have a copy of the client’s secret key. The
   authentication protocol enables both parties to prove to each
   other that they have a copy of the key without actually revealing it. This
   provides mutual authentication, which means the cluster is sure the user
   possesses the secret key, and the user is sure that the cluster has a copy of
   the secret key as well.
  </para>
  <para> A key scalability feature of &ceph; is to avoid a centralized interface
   to the &ceph; object store. This means that &ceph; clients can
   interact with OSDs directly. To protect data, &ceph; provides its &cephx;
   authentication system, which authenticates &ceph; clients. 
  </para>
  <para>
   Most often, clients contact a monitor. 
   Each monitor can authenticate clients and distribute keys, so there is no
   single point of failure or bottleneck when using &cephx;. The monitor returns
   an authentication data structure that contains a
   session key for use in obtaining &ceph; services. This session key is itself
   encrypted with the client’s permanent secret key, so that only the client can
   request services from the &ceph; monitors. The client then uses the session
   key to request its desired services from the monitor, and the monitor
   provides the client with a ticket that will authenticate the client to the
   OSDs that actually handle data. &ceph; monitors and OSDs share a secret, so the
   client can use the ticket provided by the monitor with any OSD or metadata
   server in the cluster. &cephx; tickets expire, so an attacker
   cannot use an expired ticket or session key obtained wrongfully. This
   form of authentication will prevent attackers with access to the
   communications medium from either creating bogus messages under another
   client’s identity or altering another client’s legitimate messages, as long as
   the client secret key is not revealed before it expires.
  </para>
  <para> To use &cephx;, an administrator must set up clients/users first. In
   the following diagram, the <systemitem
    class="username">client.admin</systemitem> user invokes <command>ceph auth
    get-or-create-key</command> from the command line to generate a user name
   and secret key. &ceph;’s <command>auth</command> subsystem generates the user
   name and key, stores a copy with the monitor(s) and transmits the user’s
   secret back to the <systemitem class="username">client.admin</systemitem>
   user. This means that the client and the monitor share a secret key.
  </para>
  <figure>
   <title>Basic &cephx; Authentication</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="cephx_keyring.png" width="70%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="cephx_keyring.png" width="70%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
</chapter>
