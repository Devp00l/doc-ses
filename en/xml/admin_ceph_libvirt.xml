<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN"
"novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.ceph.libvirt">
 <title>Using &libvirt; with &ceph;</title>
 <para>
  The &libvirt; library creates a virtual machine abstraction layer between
  hypervisor interfaces and the software applications that use them. With
  &libvirt;, developers and system administrators can focus on a common
  management framework, common API, and common shell interface (i.e.,
  <command>virsh</command>) to many different hypervisors, including
  &qemu;/&kvm;, &xen;, LXC, or VirtualBox.
 </para>
 <para>
  &ceph; block devices support &qemu;/&kvm;. You can use &ceph; block
  devices with software that interfaces with &libvirt;. The cloud solution
  uses &libvirt; to interact with &qemu;/&kvm;, and &qemu;/&kvm; interacts
  with Ceph block devices via <systemitem>librbd</systemitem>.
 </para>
 <para>
  To create VMs that use &ceph; block devices, use the procedures in the
  following sections. In the examples, we have used
  <literal>libvirt-pool</literal> for the pool name,
  <literal>client.libvirt</literal> for the user name, and
  <literal>new-libvirt-image</literal> for the image name. You may use any
  value you like, but ensure you replace those values when executing
  commands in the subsequent procedures.
 </para>
 <sect1 id="ceph.libvirt.cfg_ceph">
  <title>Configuring &ceph;</title>

  <para>
   To configure Ceph for use with &libvirt;, perform the following steps:
  </para>

  <procedure>
   <step>
    <para>
     Create a pool. The following example uses the pool name
     <literal>libvirt-pool</literal> with 128 placement groups.
    </para>
<screen>ceph osd pool create libvirt-pool 128 128</screen>
    <para>
     Verify that the pool exists.
    </para>
<screen>ceph osd lspools</screen>
   </step>
   <step>
    <para>
     Create a &ceph; User. The following example uses the &ceph; user name
     <literal>client.libvirt</literal> and references
     <literal>libvirt-pool</literal>.
    </para>
<screen>ceph auth get-or-create client.libvirt mon 'allow r' osd \
 'allow class-read object_prefix rbd_children, allow rwx pool=libvirt-pool'</screen>
    <para>
     Verify the name exists.
    </para>
<screen>ceph auth list</screen>
    <note>
     <para>
      &libvirt; will access &ceph; using the ID <literal>libvirt</literal>,
      not the &ceph; name <literal>client.libvirt</literal>. See
      <ulink
 url="http://ceph.com/docs/master/rados/operations/user-management#user"/>
      for a detailed explanation of the difference between ID and name.
     </para>
    </note>
   </step>
   <step>
    <para>
     Use &qemu; to create an image in your RBD pool. The following example
     uses the image name <literal>new-libvirt-image</literal> and references
     <literal>libvirt-pool</literal>.
    </para>
<screen>qemu-img create -f rbd rbd:libvirt-pool/new-libvirt-image 2G</screen>
    <para>
     Verify the image exists.
    </para>
<screen>rbd -p libvirt-pool ls</screen>
   </step>
  </procedure>
 </sect1>
 <sect1 id="ceph.libvirt.virt-manager">
  <title>Preparing the VM Manager</title>

  <para>
   You may use &libvirt; without a VM manager, but you may find it simpler
   to create your first domain with <command>virt-manager</command>.
  </para>

  <procedure>
   <step>
    <para>
     Install a virtual machine manager.
    </para>
<screen>sudo zypper in virt-manager</screen>
   </step>
   <step>
    <para>
     Prepare/download an OS image of the system you want to run virtualized.
    </para>
   </step>
   <step>
    <para>
     Launch the virtual machine manager.
    </para>
<screen>virt-manager</screen>
   </step>
  </procedure>
 </sect1>
 <sect1 id="ceph.libvirt.create_vm">
  <title>Creating a VM</title>

  <para>
   To create a VM with <command>virt-manager</command>, perform the
   following steps:
  </para>

  <procedure>
   <step>
    <para>
     Choose the connection from the list, right-click it, and select
     <guimenu>New</guimenu>.
    </para>
   </step>
   <step>
    <para>
     <guimenu>Import existing disk image</guimenu> by providing path to the
     existing storage. Specify OS type, memory settings, and
     <guimenu>Name</guimenu> the virtual machine, for example
     <literal>libvirt-virtual-machine</literal>.
    </para>
   </step>
   <step>
    <para>
     Finish the configuration and start the VM.
    </para>
   </step>
   <step>
    <para>
     Verify that the newly created domain exists with <command>sudo virsh
     list</command>. If needed, specify the connection string, such as
    </para>
<screen role="ceph.libvirt.create_vm1"><command>virsh -c qemu+ssh://root@vm_host_hostname/system list</command>
Id    Name                           State
-----------------------------------------------
[...]
 9     libvirt-virtual-machine       running</screen>
   </step>
   <step>
    <para>
     Login to the VM and stop it before configuring it for use with &ceph;.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="ceph.libvirt.cfg_vm">
  <title>Configuring the VM</title>

  <para>
   When configuring the VM for use with &ceph;, it is important to use
   <command>virsh</command> where appropriate. Additionally,
   <command>virsh</command> commands often require root privileges (i.e.,
   <command>sudo</command>) and will not return appropriate results or
   notify you that that root privileges are required. For a reference of
   <command>virsh</command> commands, refer to
   <ulink url="http://www.libvirt.org/virshcmdref.html">Virsh Command
   Reference</ulink>.
  </para>
 </sect1>
</chapter>
